//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SlideIOC.WebServiceAccountVNPT {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AccountServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XmlSerializer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsIDD))]
    public partial class AccountService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback HashEncryptOperationCompleted;
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback Test1OperationCompleted;
        
        private System.Threading.SendOrPostCallback Tes22OperationCompleted;
        
        private System.Threading.SendOrPostCallback Tes3OperationCompleted;
        
        private System.Threading.SendOrPostCallback SigoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMSSendOTP1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SMSSendOTP2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback isRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleInUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolesXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserNameByPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback RandomPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListEmployeeRegEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListEmployeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeUpdateEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeSyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback DonviListGetOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AccountService() {
            this.Url = global::SlideIOC.Properties.Settings.Default.SlideIOC_WebServiceAccountVNPT_AccountService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event HashEncryptCompletedEventHandler HashEncryptCompleted;
        
        /// <remarks/>
        public event Test1CompletedEventHandler Test1Completed;
        
        /// <remarks/>
        public event Tes22CompletedEventHandler Tes22Completed;
        
        /// <remarks/>
        public event Tes3CompletedEventHandler Tes3Completed;
        
        /// <remarks/>
        public event SigoutCompletedEventHandler SigoutCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LoginOTPCompletedEventHandler LoginOTPCompleted;
        
        /// <remarks/>
        public event SMSSendOTP1CompletedEventHandler SMSSendOTP1Completed;
        
        /// <remarks/>
        public event SMSSendOTP2CompletedEventHandler SMSSendOTP2Completed;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event isRolesCompletedEventHandler isRolesCompleted;
        
        /// <remarks/>
        public event GetRolesCompletedEventHandler GetRolesCompleted;
        
        /// <remarks/>
        public event GetRoleInUserCompletedEventHandler GetRoleInUserCompleted;
        
        /// <remarks/>
        public event GetRolesXMLCompletedEventHandler GetRolesXMLCompleted;
        
        /// <remarks/>
        public event UserListCompletedEventHandler UserListCompleted;
        
        /// <remarks/>
        public event GetUserListCompletedEventHandler GetUserListCompleted;
        
        /// <remarks/>
        public event AddUserToRoleCompletedEventHandler AddUserToRoleCompleted;
        
        /// <remarks/>
        public event RegisterUserCompletedEventHandler RegisterUserCompleted;
        
        /// <remarks/>
        public event CheckUserNameByPhoneCompletedEventHandler CheckUserNameByPhoneCompleted;
        
        /// <remarks/>
        public event RandomPasswordCompletedEventHandler RandomPasswordCompleted;
        
        /// <remarks/>
        public event ListEmployeeCompletedEventHandler ListEmployeeCompleted;
        
        /// <remarks/>
        public event ListEmployeeRegEmailCompletedEventHandler ListEmployeeRegEmailCompleted;
        
        /// <remarks/>
        public event ListEmployeesCompletedEventHandler ListEmployeesCompleted;
        
        /// <remarks/>
        public event EmployeeUpdateCompletedEventHandler EmployeeUpdateCompleted;
        
        /// <remarks/>
        public event EmployeeUpdatesCompletedEventHandler EmployeeUpdatesCompleted;
        
        /// <remarks/>
        public event EmployeeUpdateEmailCompletedEventHandler EmployeeUpdateEmailCompleted;
        
        /// <remarks/>
        public event EmployeeSyncCompletedEventHandler EmployeeSyncCompleted;
        
        /// <remarks/>
        public event DonviListGetCompletedEventHandler DonviListGetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HashEncrypt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HashEncrypt(string input, SecurityType Type, int times) {
            object[] results = this.Invoke("HashEncrypt", new object[] {
                        input,
                        Type,
                        times});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HashEncryptAsync(string input, SecurityType Type, int times) {
            this.HashEncryptAsync(input, Type, times, null);
        }
        
        /// <remarks/>
        public void HashEncryptAsync(string input, SecurityType Type, int times, object userState) {
            if ((this.HashEncryptOperationCompleted == null)) {
                this.HashEncryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHashEncryptOperationCompleted);
            }
            this.InvokeAsync("HashEncrypt", new object[] {
                        input,
                        Type,
                        times}, this.HashEncryptOperationCompleted, userState);
        }
        
        private void OnHashEncryptOperationCompleted(object arg) {
            if ((this.HashEncryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HashEncryptCompleted(this, new HashEncryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Test1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Test1(string NumberSend, string NumberReceive, string content) {
            object[] results = this.Invoke("Test1", new object[] {
                        NumberSend,
                        NumberReceive,
                        content});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Test1Async(string NumberSend, string NumberReceive, string content) {
            this.Test1Async(NumberSend, NumberReceive, content, null);
        }
        
        /// <remarks/>
        public void Test1Async(string NumberSend, string NumberReceive, string content, object userState) {
            if ((this.Test1OperationCompleted == null)) {
                this.Test1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnTest1OperationCompleted);
            }
            this.InvokeAsync("Test1", new object[] {
                        NumberSend,
                        NumberReceive,
                        content}, this.Test1OperationCompleted, userState);
        }
        
        private void OnTest1OperationCompleted(object arg) {
            if ((this.Test1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Test1Completed(this, new Test1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Tes22", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Tes22(string NumberSend, string NumberReceive, string content, string userid, string password) {
            object[] results = this.Invoke("Tes22", new object[] {
                        NumberSend,
                        NumberReceive,
                        content,
                        userid,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Tes22Async(string NumberSend, string NumberReceive, string content, string userid, string password) {
            this.Tes22Async(NumberSend, NumberReceive, content, userid, password, null);
        }
        
        /// <remarks/>
        public void Tes22Async(string NumberSend, string NumberReceive, string content, string userid, string password, object userState) {
            if ((this.Tes22OperationCompleted == null)) {
                this.Tes22OperationCompleted = new System.Threading.SendOrPostCallback(this.OnTes22OperationCompleted);
            }
            this.InvokeAsync("Tes22", new object[] {
                        NumberSend,
                        NumberReceive,
                        content,
                        userid,
                        password}, this.Tes22OperationCompleted, userState);
        }
        
        private void OnTes22OperationCompleted(object arg) {
            if ((this.Tes22Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Tes22Completed(this, new Tes22CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Tes3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEventD Tes3(string NumberSend, string NumberReceive, string content, string userid, string password) {
            object[] results = this.Invoke("Tes3", new object[] {
                        NumberSend,
                        NumberReceive,
                        content,
                        userid,
                        password});
            return ((ResponseEventD)(results[0]));
        }
        
        /// <remarks/>
        public void Tes3Async(string NumberSend, string NumberReceive, string content, string userid, string password) {
            this.Tes3Async(NumberSend, NumberReceive, content, userid, password, null);
        }
        
        /// <remarks/>
        public void Tes3Async(string NumberSend, string NumberReceive, string content, string userid, string password, object userState) {
            if ((this.Tes3OperationCompleted == null)) {
                this.Tes3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnTes3OperationCompleted);
            }
            this.InvokeAsync("Tes3", new object[] {
                        NumberSend,
                        NumberReceive,
                        content,
                        userid,
                        password}, this.Tes3OperationCompleted, userState);
        }
        
        private void OnTes3OperationCompleted(object arg) {
            if ((this.Tes3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Tes3Completed(this, new Tes3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Sigout", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Sigout(string UserName) {
            this.Invoke("Sigout", new object[] {
                        UserName});
        }
        
        /// <remarks/>
        public void SigoutAsync(string UserName) {
            this.SigoutAsync(UserName, null);
        }
        
        /// <remarks/>
        public void SigoutAsync(string UserName, object userState) {
            if ((this.SigoutOperationCompleted == null)) {
                this.SigoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSigoutOperationCompleted);
            }
            this.InvokeAsync("Sigout", new object[] {
                        UserName}, this.SigoutOperationCompleted, userState);
        }
        
        private void OnSigoutOperationCompleted(object arg) {
            if ((this.SigoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SigoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account Login(string UserName, string Password) {
            object[] results = this.Invoke("Login", new object[] {
                        UserName,
                        Password});
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string UserName, string Password) {
            this.LoginAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string UserName, string Password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        UserName,
                        Password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginOTP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account LoginOTP(string UserName, string Password, int TypeOTP) {
            object[] results = this.Invoke("LoginOTP", new object[] {
                        UserName,
                        Password,
                        TypeOTP});
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void LoginOTPAsync(string UserName, string Password, int TypeOTP) {
            this.LoginOTPAsync(UserName, Password, TypeOTP, null);
        }
        
        /// <remarks/>
        public void LoginOTPAsync(string UserName, string Password, int TypeOTP, object userState) {
            if ((this.LoginOTPOperationCompleted == null)) {
                this.LoginOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOTPOperationCompleted);
            }
            this.InvokeAsync("LoginOTP", new object[] {
                        UserName,
                        Password,
                        TypeOTP}, this.LoginOTPOperationCompleted, userState);
        }
        
        private void OnLoginOTPOperationCompleted(object arg) {
            if ((this.LoginOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginOTPCompleted(this, new LoginOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMSSendOTP1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEvent SMSSendOTP1(string NumberSend, string NumberReceive, string content, string smsAccount, string userid, string password) {
            object[] results = this.Invoke("SMSSendOTP1", new object[] {
                        NumberSend,
                        NumberReceive,
                        content,
                        smsAccount,
                        userid,
                        password});
            return ((ResponseEvent)(results[0]));
        }
        
        /// <remarks/>
        public void SMSSendOTP1Async(string NumberSend, string NumberReceive, string content, string smsAccount, string userid, string password) {
            this.SMSSendOTP1Async(NumberSend, NumberReceive, content, smsAccount, userid, password, null);
        }
        
        /// <remarks/>
        public void SMSSendOTP1Async(string NumberSend, string NumberReceive, string content, string smsAccount, string userid, string password, object userState) {
            if ((this.SMSSendOTP1OperationCompleted == null)) {
                this.SMSSendOTP1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMSSendOTP1OperationCompleted);
            }
            this.InvokeAsync("SMSSendOTP1", new object[] {
                        NumberSend,
                        NumberReceive,
                        content,
                        smsAccount,
                        userid,
                        password}, this.SMSSendOTP1OperationCompleted, userState);
        }
        
        private void OnSMSSendOTP1OperationCompleted(object arg) {
            if ((this.SMSSendOTP1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMSSendOTP1Completed(this, new SMSSendOTP1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMSSendOTP2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEvent SMSSendOTP2(string NumberSend, string NumberReceive, string content, string smsAccount) {
            object[] results = this.Invoke("SMSSendOTP2", new object[] {
                        NumberSend,
                        NumberReceive,
                        content,
                        smsAccount});
            return ((ResponseEvent)(results[0]));
        }
        
        /// <remarks/>
        public void SMSSendOTP2Async(string NumberSend, string NumberReceive, string content, string smsAccount) {
            this.SMSSendOTP2Async(NumberSend, NumberReceive, content, smsAccount, null);
        }
        
        /// <remarks/>
        public void SMSSendOTP2Async(string NumberSend, string NumberReceive, string content, string smsAccount, object userState) {
            if ((this.SMSSendOTP2OperationCompleted == null)) {
                this.SMSSendOTP2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMSSendOTP2OperationCompleted);
            }
            this.InvokeAsync("SMSSendOTP2", new object[] {
                        NumberSend,
                        NumberReceive,
                        content,
                        smsAccount}, this.SMSSendOTP2OperationCompleted, userState);
        }
        
        private void OnSMSSendOTP2OperationCompleted(object arg) {
            if ((this.SMSSendOTP2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMSSendOTP2Completed(this, new SMSSendOTP2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account ChangePassword(string UserName, string oldPassword, string newPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        UserName,
                        oldPassword,
                        newPassword});
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string UserName, string oldPassword, string newPassword) {
            this.ChangePasswordAsync(UserName, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string UserName, string oldPassword, string newPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        UserName,
                        oldPassword,
                        newPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account ResetPassword(string UserName, string oldPassword, string newPassword) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        UserName,
                        oldPassword,
                        newPassword});
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string UserName, string oldPassword, string newPassword) {
            this.ResetPasswordAsync(UserName, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string UserName, string oldPassword, string newPassword, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        UserName,
                        oldPassword,
                        newPassword}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isRoles(string UserName, string role) {
            object[] results = this.Invoke("isRoles", new object[] {
                        UserName,
                        role});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isRolesAsync(string UserName, string role) {
            this.isRolesAsync(UserName, role, null);
        }
        
        /// <remarks/>
        public void isRolesAsync(string UserName, string role, object userState) {
            if ((this.isRolesOperationCompleted == null)) {
                this.isRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisRolesOperationCompleted);
            }
            this.InvokeAsync("isRoles", new object[] {
                        UserName,
                        role}, this.isRolesOperationCompleted, userState);
        }
        
        private void OnisRolesOperationCompleted(object arg) {
            if ((this.isRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isRolesCompleted(this, new isRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEventD GetRoles(string Status, string UserName, string RoleName, string ApplicationName) {
            object[] results = this.Invoke("GetRoles", new object[] {
                        Status,
                        UserName,
                        RoleName,
                        ApplicationName});
            return ((ResponseEventD)(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesAsync(string Status, string UserName, string RoleName, string ApplicationName) {
            this.GetRolesAsync(Status, UserName, RoleName, ApplicationName, null);
        }
        
        /// <remarks/>
        public void GetRolesAsync(string Status, string UserName, string RoleName, string ApplicationName, object userState) {
            if ((this.GetRolesOperationCompleted == null)) {
                this.GetRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesOperationCompleted);
            }
            this.InvokeAsync("GetRoles", new object[] {
                        Status,
                        UserName,
                        RoleName,
                        ApplicationName}, this.GetRolesOperationCompleted, userState);
        }
        
        private void OnGetRolesOperationCompleted(object arg) {
            if ((this.GetRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesCompleted(this, new GetRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleInUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEventD GetRoleInUser(string Status, string UserName, string ApplicationName) {
            object[] results = this.Invoke("GetRoleInUser", new object[] {
                        Status,
                        UserName,
                        ApplicationName});
            return ((ResponseEventD)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleInUserAsync(string Status, string UserName, string ApplicationName) {
            this.GetRoleInUserAsync(Status, UserName, ApplicationName, null);
        }
        
        /// <remarks/>
        public void GetRoleInUserAsync(string Status, string UserName, string ApplicationName, object userState) {
            if ((this.GetRoleInUserOperationCompleted == null)) {
                this.GetRoleInUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleInUserOperationCompleted);
            }
            this.InvokeAsync("GetRoleInUser", new object[] {
                        Status,
                        UserName,
                        ApplicationName}, this.GetRoleInUserOperationCompleted, userState);
        }
        
        private void OnGetRoleInUserOperationCompleted(object arg) {
            if ((this.GetRoleInUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleInUserCompleted(this, new GetRoleInUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRolesXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RoleType[] GetRolesXML(string Status, string UserName, string RoleName, string ApplicationName) {
            object[] results = this.Invoke("GetRolesXML", new object[] {
                        Status,
                        UserName,
                        RoleName,
                        ApplicationName});
            return ((RoleType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesXMLAsync(string Status, string UserName, string RoleName, string ApplicationName) {
            this.GetRolesXMLAsync(Status, UserName, RoleName, ApplicationName, null);
        }
        
        /// <remarks/>
        public void GetRolesXMLAsync(string Status, string UserName, string RoleName, string ApplicationName, object userState) {
            if ((this.GetRolesXMLOperationCompleted == null)) {
                this.GetRolesXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesXMLOperationCompleted);
            }
            this.InvokeAsync("GetRolesXML", new object[] {
                        Status,
                        UserName,
                        RoleName,
                        ApplicationName}, this.GetRolesXMLOperationCompleted, userState);
        }
        
        private void OnGetRolesXMLOperationCompleted(object arg) {
            if ((this.GetRolesXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesXMLCompleted(this, new GetRolesXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account[] UserList(string UserName, string role) {
            object[] results = this.Invoke("UserList", new object[] {
                        UserName,
                        role});
            return ((Account[])(results[0]));
        }
        
        /// <remarks/>
        public void UserListAsync(string UserName, string role) {
            this.UserListAsync(UserName, role, null);
        }
        
        /// <remarks/>
        public void UserListAsync(string UserName, string role, object userState) {
            if ((this.UserListOperationCompleted == null)) {
                this.UserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserListOperationCompleted);
            }
            this.InvokeAsync("UserList", new object[] {
                        UserName,
                        role}, this.UserListOperationCompleted, userState);
        }
        
        private void OnUserListOperationCompleted(object arg) {
            if ((this.UserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserListCompleted(this, new UserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEventD GetUserList(string Status, string UserName, string role, string DonviID) {
            object[] results = this.Invoke("GetUserList", new object[] {
                        Status,
                        UserName,
                        role,
                        DonviID});
            return ((ResponseEventD)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserListAsync(string Status, string UserName, string role, string DonviID) {
            this.GetUserListAsync(Status, UserName, role, DonviID, null);
        }
        
        /// <remarks/>
        public void GetUserListAsync(string Status, string UserName, string role, string DonviID, object userState) {
            if ((this.GetUserListOperationCompleted == null)) {
                this.GetUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListOperationCompleted);
            }
            this.InvokeAsync("GetUserList", new object[] {
                        Status,
                        UserName,
                        role,
                        DonviID}, this.GetUserListOperationCompleted, userState);
        }
        
        private void OnGetUserListOperationCompleted(object arg) {
            if ((this.GetUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserListCompleted(this, new GetUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserToRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEventD AddUserToRole(string Status, string Admin, string UserName, string role) {
            object[] results = this.Invoke("AddUserToRole", new object[] {
                        Status,
                        Admin,
                        UserName,
                        role});
            return ((ResponseEventD)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserToRoleAsync(string Status, string Admin, string UserName, string role) {
            this.AddUserToRoleAsync(Status, Admin, UserName, role, null);
        }
        
        /// <remarks/>
        public void AddUserToRoleAsync(string Status, string Admin, string UserName, string role, object userState) {
            if ((this.AddUserToRoleOperationCompleted == null)) {
                this.AddUserToRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToRoleOperationCompleted);
            }
            this.InvokeAsync("AddUserToRole", new object[] {
                        Status,
                        Admin,
                        UserName,
                        role}, this.AddUserToRoleOperationCompleted, userState);
        }
        
        private void OnAddUserToRoleOperationCompleted(object arg) {
            if ((this.AddUserToRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToRoleCompleted(this, new AddUserToRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account RegisterUser(string Status, string Account, string email, string password) {
            object[] results = this.Invoke("RegisterUser", new object[] {
                        Status,
                        Account,
                        email,
                        password});
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string Status, string Account, string email, string password) {
            this.RegisterUserAsync(Status, Account, email, password, null);
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string Status, string Account, string email, string password, object userState) {
            if ((this.RegisterUserOperationCompleted == null)) {
                this.RegisterUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterUserOperationCompleted);
            }
            this.InvokeAsync("RegisterUser", new object[] {
                        Status,
                        Account,
                        email,
                        password}, this.RegisterUserOperationCompleted, userState);
        }
        
        private void OnRegisterUserOperationCompleted(object arg) {
            if ((this.RegisterUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterUserCompleted(this, new RegisterUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserNameByPhone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckUserNameByPhone(string UserID, string PhoneNumber) {
            object[] results = this.Invoke("CheckUserNameByPhone", new object[] {
                        UserID,
                        PhoneNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserNameByPhoneAsync(string UserID, string PhoneNumber) {
            this.CheckUserNameByPhoneAsync(UserID, PhoneNumber, null);
        }
        
        /// <remarks/>
        public void CheckUserNameByPhoneAsync(string UserID, string PhoneNumber, object userState) {
            if ((this.CheckUserNameByPhoneOperationCompleted == null)) {
                this.CheckUserNameByPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserNameByPhoneOperationCompleted);
            }
            this.InvokeAsync("CheckUserNameByPhone", new object[] {
                        UserID,
                        PhoneNumber}, this.CheckUserNameByPhoneOperationCompleted, userState);
        }
        
        private void OnCheckUserNameByPhoneOperationCompleted(object arg) {
            if ((this.CheckUserNameByPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserNameByPhoneCompleted(this, new CheckUserNameByPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RandomPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RandomPassword(int LenPassword) {
            object[] results = this.Invoke("RandomPassword", new object[] {
                        LenPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RandomPasswordAsync(int LenPassword) {
            this.RandomPasswordAsync(LenPassword, null);
        }
        
        /// <remarks/>
        public void RandomPasswordAsync(int LenPassword, object userState) {
            if ((this.RandomPasswordOperationCompleted == null)) {
                this.RandomPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRandomPasswordOperationCompleted);
            }
            this.InvokeAsync("RandomPassword", new object[] {
                        LenPassword}, this.RandomPasswordOperationCompleted, userState);
        }
        
        private void OnRandomPasswordOperationCompleted(object arg) {
            if ((this.RandomPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RandomPasswordCompleted(this, new RandomPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEventD ListEmployee(string Status, string UserID, string role, string DonviID) {
            object[] results = this.Invoke("ListEmployee", new object[] {
                        Status,
                        UserID,
                        role,
                        DonviID});
            return ((ResponseEventD)(results[0]));
        }
        
        /// <remarks/>
        public void ListEmployeeAsync(string Status, string UserID, string role, string DonviID) {
            this.ListEmployeeAsync(Status, UserID, role, DonviID, null);
        }
        
        /// <remarks/>
        public void ListEmployeeAsync(string Status, string UserID, string role, string DonviID, object userState) {
            if ((this.ListEmployeeOperationCompleted == null)) {
                this.ListEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListEmployeeOperationCompleted);
            }
            this.InvokeAsync("ListEmployee", new object[] {
                        Status,
                        UserID,
                        role,
                        DonviID}, this.ListEmployeeOperationCompleted, userState);
        }
        
        private void OnListEmployeeOperationCompleted(object arg) {
            if ((this.ListEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListEmployeeCompleted(this, new ListEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEmployeeRegEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEventD ListEmployeeRegEmail(string Status, string UserID, string role, string DonviID) {
            object[] results = this.Invoke("ListEmployeeRegEmail", new object[] {
                        Status,
                        UserID,
                        role,
                        DonviID});
            return ((ResponseEventD)(results[0]));
        }
        
        /// <remarks/>
        public void ListEmployeeRegEmailAsync(string Status, string UserID, string role, string DonviID) {
            this.ListEmployeeRegEmailAsync(Status, UserID, role, DonviID, null);
        }
        
        /// <remarks/>
        public void ListEmployeeRegEmailAsync(string Status, string UserID, string role, string DonviID, object userState) {
            if ((this.ListEmployeeRegEmailOperationCompleted == null)) {
                this.ListEmployeeRegEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListEmployeeRegEmailOperationCompleted);
            }
            this.InvokeAsync("ListEmployeeRegEmail", new object[] {
                        Status,
                        UserID,
                        role,
                        DonviID}, this.ListEmployeeRegEmailOperationCompleted, userState);
        }
        
        private void OnListEmployeeRegEmailOperationCompleted(object arg) {
            if ((this.ListEmployeeRegEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListEmployeeRegEmailCompleted(this, new ListEmployeeRegEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEmployees", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account[] ListEmployees(string Status, string UserID, string role, string DonviID) {
            object[] results = this.Invoke("ListEmployees", new object[] {
                        Status,
                        UserID,
                        role,
                        DonviID});
            return ((Account[])(results[0]));
        }
        
        /// <remarks/>
        public void ListEmployeesAsync(string Status, string UserID, string role, string DonviID) {
            this.ListEmployeesAsync(Status, UserID, role, DonviID, null);
        }
        
        /// <remarks/>
        public void ListEmployeesAsync(string Status, string UserID, string role, string DonviID, object userState) {
            if ((this.ListEmployeesOperationCompleted == null)) {
                this.ListEmployeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListEmployeesOperationCompleted);
            }
            this.InvokeAsync("ListEmployees", new object[] {
                        Status,
                        UserID,
                        role,
                        DonviID}, this.ListEmployeesOperationCompleted, userState);
        }
        
        private void OnListEmployeesOperationCompleted(object arg) {
            if ((this.ListEmployeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListEmployeesCompleted(this, new ListEmployeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmployeeUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEventD EmployeeUpdate(string Status, string UserID, string Account, string Name, string ngaysinh, string cmnd, string gioitinh, string sodt, string didong, string email, string trangthai) {
            object[] results = this.Invoke("EmployeeUpdate", new object[] {
                        Status,
                        UserID,
                        Account,
                        Name,
                        ngaysinh,
                        cmnd,
                        gioitinh,
                        sodt,
                        didong,
                        email,
                        trangthai});
            return ((ResponseEventD)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeUpdateAsync(string Status, string UserID, string Account, string Name, string ngaysinh, string cmnd, string gioitinh, string sodt, string didong, string email, string trangthai) {
            this.EmployeeUpdateAsync(Status, UserID, Account, Name, ngaysinh, cmnd, gioitinh, sodt, didong, email, trangthai, null);
        }
        
        /// <remarks/>
        public void EmployeeUpdateAsync(string Status, string UserID, string Account, string Name, string ngaysinh, string cmnd, string gioitinh, string sodt, string didong, string email, string trangthai, object userState) {
            if ((this.EmployeeUpdateOperationCompleted == null)) {
                this.EmployeeUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeUpdateOperationCompleted);
            }
            this.InvokeAsync("EmployeeUpdate", new object[] {
                        Status,
                        UserID,
                        Account,
                        Name,
                        ngaysinh,
                        cmnd,
                        gioitinh,
                        sodt,
                        didong,
                        email,
                        trangthai}, this.EmployeeUpdateOperationCompleted, userState);
        }
        
        private void OnEmployeeUpdateOperationCompleted(object arg) {
            if ((this.EmployeeUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeUpdateCompleted(this, new EmployeeUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmployeeUpdates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEventD EmployeeUpdates(string Status, string UserID, string Account, string Name, string ngaysinh, string cmnd, string gioitinh, string sodt, string didong, string email, string trangthai, string donviid) {
            object[] results = this.Invoke("EmployeeUpdates", new object[] {
                        Status,
                        UserID,
                        Account,
                        Name,
                        ngaysinh,
                        cmnd,
                        gioitinh,
                        sodt,
                        didong,
                        email,
                        trangthai,
                        donviid});
            return ((ResponseEventD)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeUpdatesAsync(string Status, string UserID, string Account, string Name, string ngaysinh, string cmnd, string gioitinh, string sodt, string didong, string email, string trangthai, string donviid) {
            this.EmployeeUpdatesAsync(Status, UserID, Account, Name, ngaysinh, cmnd, gioitinh, sodt, didong, email, trangthai, donviid, null);
        }
        
        /// <remarks/>
        public void EmployeeUpdatesAsync(string Status, string UserID, string Account, string Name, string ngaysinh, string cmnd, string gioitinh, string sodt, string didong, string email, string trangthai, string donviid, object userState) {
            if ((this.EmployeeUpdatesOperationCompleted == null)) {
                this.EmployeeUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeUpdatesOperationCompleted);
            }
            this.InvokeAsync("EmployeeUpdates", new object[] {
                        Status,
                        UserID,
                        Account,
                        Name,
                        ngaysinh,
                        cmnd,
                        gioitinh,
                        sodt,
                        didong,
                        email,
                        trangthai,
                        donviid}, this.EmployeeUpdatesOperationCompleted, userState);
        }
        
        private void OnEmployeeUpdatesOperationCompleted(object arg) {
            if ((this.EmployeeUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeUpdatesCompleted(this, new EmployeeUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmployeeUpdateEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEvent EmployeeUpdateEmail(string Status, string UserID, string Account, string email, string EmailPassword) {
            object[] results = this.Invoke("EmployeeUpdateEmail", new object[] {
                        Status,
                        UserID,
                        Account,
                        email,
                        EmailPassword});
            return ((ResponseEvent)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeUpdateEmailAsync(string Status, string UserID, string Account, string email, string EmailPassword) {
            this.EmployeeUpdateEmailAsync(Status, UserID, Account, email, EmailPassword, null);
        }
        
        /// <remarks/>
        public void EmployeeUpdateEmailAsync(string Status, string UserID, string Account, string email, string EmailPassword, object userState) {
            if ((this.EmployeeUpdateEmailOperationCompleted == null)) {
                this.EmployeeUpdateEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeUpdateEmailOperationCompleted);
            }
            this.InvokeAsync("EmployeeUpdateEmail", new object[] {
                        Status,
                        UserID,
                        Account,
                        email,
                        EmailPassword}, this.EmployeeUpdateEmailOperationCompleted, userState);
        }
        
        private void OnEmployeeUpdateEmailOperationCompleted(object arg) {
            if ((this.EmployeeUpdateEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeUpdateEmailCompleted(this, new EmployeeUpdateEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmployeeSync", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEventD EmployeeSync(string Status, string UserID) {
            object[] results = this.Invoke("EmployeeSync", new object[] {
                        Status,
                        UserID});
            return ((ResponseEventD)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeSyncAsync(string Status, string UserID) {
            this.EmployeeSyncAsync(Status, UserID, null);
        }
        
        /// <remarks/>
        public void EmployeeSyncAsync(string Status, string UserID, object userState) {
            if ((this.EmployeeSyncOperationCompleted == null)) {
                this.EmployeeSyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeSyncOperationCompleted);
            }
            this.InvokeAsync("EmployeeSync", new object[] {
                        Status,
                        UserID}, this.EmployeeSyncOperationCompleted, userState);
        }
        
        private void OnEmployeeSyncOperationCompleted(object arg) {
            if ((this.EmployeeSyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeSyncCompleted(this, new EmployeeSyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DonviListGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsDonvi[] DonviListGet(string Status, string UserID, long DonviID) {
            object[] results = this.Invoke("DonviListGet", new object[] {
                        Status,
                        UserID,
                        DonviID});
            return ((clsDonvi[])(results[0]));
        }
        
        /// <remarks/>
        public void DonviListGetAsync(string Status, string UserID, long DonviID) {
            this.DonviListGetAsync(Status, UserID, DonviID, null);
        }
        
        /// <remarks/>
        public void DonviListGetAsync(string Status, string UserID, long DonviID, object userState) {
            if ((this.DonviListGetOperationCompleted == null)) {
                this.DonviListGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDonviListGetOperationCompleted);
            }
            this.InvokeAsync("DonviListGet", new object[] {
                        Status,
                        UserID,
                        DonviID}, this.DonviListGetOperationCompleted, userState);
        }
        
        private void OnDonviListGetOperationCompleted(object arg) {
            if ((this.DonviListGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DonviListGetCompleted(this, new DonviListGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Identifications))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RoleType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class XmlSerializer {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RoleType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Identifications : XmlSerializer {
        
        private string applicationIDField;
        
        private Status actionField;
        
        private long iDDField;
        
        private string nameField;
        
        private string fullNameField;
        
        private string keyIDField;
        
        private string parentKeyField;
        
        private string textField;
        
        private object senderField;
        
        private string serialNoField;
        
        private long resultField;
        
        private long countField;
        
        private string descriptionField;
        
        private string messageField;
        
        private System.DateTime responseTimeField;
        
        private System.DateTime dateCreateField;
        
        private System.DateTime dateModifyField;
        
        private string responseTimesField;
        
        private string xmlStringField;
        
        private string userIDField;
        
        private string passwordField;
        
        private string userNameField;
        
        private string username2Field;
        
        private string statusField;
        
        private StatusFind statusCodeField;
        
        private string statusIDField;
        
        private string codeField;
        
        private string codeHashField;
        
        private string editModeField;
        
        private string addModeField;
        
        private string ghichuField;
        
        private string noteField;
        
        /// <remarks/>
        public string ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
            }
        }
        
        /// <remarks/>
        public Status Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public long IDD {
            get {
                return this.iDDField;
            }
            set {
                this.iDDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string ParentKey {
            get {
                return this.parentKeyField;
            }
            set {
                this.parentKeyField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public object Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public string SerialNo {
            get {
                return this.serialNoField;
            }
            set {
                this.serialNoField = value;
            }
        }
        
        /// <remarks/>
        public long Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public long Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ResponseTime {
            get {
                return this.responseTimeField;
            }
            set {
                this.responseTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreate {
            get {
                return this.dateCreateField;
            }
            set {
                this.dateCreateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateModify {
            get {
                return this.dateModifyField;
            }
            set {
                this.dateModifyField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseTimes {
            get {
                return this.responseTimesField;
            }
            set {
                this.responseTimesField = value;
            }
        }
        
        /// <remarks/>
        public string XmlString {
            get {
                return this.xmlStringField;
            }
            set {
                this.xmlStringField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Username2 {
            get {
                return this.username2Field;
            }
            set {
                this.username2Field = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public StatusFind StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string CodeHash {
            get {
                return this.codeHashField;
            }
            set {
                this.codeHashField = value;
            }
        }
        
        /// <remarks/>
        public string EditMode {
            get {
                return this.editModeField;
            }
            set {
                this.editModeField = value;
            }
        }
        
        /// <remarks/>
        public string AddMode {
            get {
                return this.addModeField;
            }
            set {
                this.addModeField = value;
            }
        }
        
        /// <remarks/>
        public string Ghichu {
            get {
                return this.ghichuField;
            }
            set {
                this.ghichuField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum Status {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Enabled,
        
        /// <remarks/>
        Disabled,
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Update,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        Reset,
        
        /// <remarks/>
        Start,
        
        /// <remarks/>
        Stop,
        
        /// <remarks/>
        Run,
        
        /// <remarks/>
        Change,
        
        /// <remarks/>
        Get,
        
        /// <remarks/>
        Set,
        
        /// <remarks/>
        Analytics,
        
        /// <remarks/>
        Welcome,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum StatusFind {
        
        /// <remarks/>
        MAPHIEU,
        
        /// <remarks/>
        MALINE,
        
        /// <remarks/>
        SODT,
        
        /// <remarks/>
        ACCOUNT,
        
        /// <remarks/>
        MAKH,
        
        /// <remarks/>
        MA_TT,
        
        /// <remarks/>
        TENKH,
        
        /// <remarks/>
        DIACHI,
        
        /// <remarks/>
        SOHD,
        
        /// <remarks/>
        NGAY,
        
        /// <remarks/>
        CMND,
        
        /// <remarks/>
        USER,
        
        /// <remarks/>
        GROUP,
        
        /// <remarks/>
        EMAIL,
        
        /// <remarks/>
        FAX,
        
        /// <remarks/>
        MAXA,
        
        /// <remarks/>
        MATRAM,
        
        /// <remarks/>
        CODE,
        
        /// <remarks/>
        KHUPHO,
        
        /// <remarks/>
        KEY,
        
        /// <remarks/>
        NHANVIEN,
        
        /// <remarks/>
        NHANVIENTC,
        
        /// <remarks/>
        NHANVIENKV,
        
        /// <remarks/>
        NHANVIENQLTUYEN,
        
        /// <remarks/>
        COORDINATE,
        
        /// <remarks/>
        COORDINATELIST,
        
        /// <remarks/>
        DONVI,
        
        /// <remarks/>
        IDD,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RoleType : Identifications {
        
        private string roleIDField;
        
        private string roleNameField;
        
        /// <remarks/>
        public string RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseEventD))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ErrorEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsTicket))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Account))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsDiaphuong))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsAddress))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsDonvi))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsIDD {
        
        private string valueField;
        
        private long iDDField;
        
        private string statusIDField;
        
        private string statusField;
        
        private long statusNoField;
        
        private StatusFind statusCodeField;
        
        private string conntionNameField;
        
        private long portalField;
        
        private string portReadField;
        
        private string portWriteField;
        
        private string ipAddressField;
        
        private string mACField;
        
        private string malineField;
        
        private string maphieuField;
        
        private string logUserIDField;
        
        private string logPassField;
        
        private string errorDescField;
        
        private string errorMessageField;
        
        private long resultField;
        
        private System.DateTime responseTimeField;
        
        private string responseTimesField;
        
        private string applicationIDField;
        
        private System.DateTime dateCreateField;
        
        private System.DateTime dateModifyField;
        
        private long timeOutField;
        
        private long isUsedField;
        
        private int isCheckedField;
        
        private int disabledField;
        
        private string userIDField;
        
        private string userNameField;
        
        private string passwordField;
        
        private string accountField;
        
        private string fullNameField;
        
        private string noteField;
        
        private string textField;
        
        private string reasonField;
        
        private string reasonIdField;
        
        private string ghichuField;
        
        private string returnField;
        
        private string groupField;
        
        private string permissionField;
        
        private int levelField;
        
        private string keyID2Field;
        
        private string keyIDField;
        
        private string keyParentField;
        
        private string textNameField;
        
        private string tagField;
        
        private string toolTipField;
        
        private int childsField;
        
        private string prefixField;
        
        private string codeField;
        
        private string codeHashField;
        
        private string editModeField;
        
        private string addModeField;
        
        private object senderField;
        
        private object formSenderField;
        
        private string paymentField;
        
        private string noMonthField;
        
        private int appIDField;
        
        private string appNameField;
        
        private string appMethodField;
        
        private string urlField;
        
        private string iPClientField;
        
        private int minField;
        
        private int maxField;
        
        private long soluongField;
        
        private long tongsoField;
        
        private string loaiField;
        
        private SyncStatus syncField;
        
        private Status actionField;
        
        private string descriptionField;
        
        private string versionField;
        
        private string serialNoField;
        
        private string tableNameField;
        
        private string xmlStringField;
        
        private string nameField;
        
        private int syncStatusField;
        
        private string messageField;
        
        private string commentField;
        
        private string contentField;
        
        private double longitudeField;
        
        private double latitudeField;
        
        private string longitudesField;
        
        private string latitudesField;
        
        private string dateChangeField;
        
        private System.DateTime lastLoginDateField;
        
        private string upTimeField;
        
        private long countField;
        
        private string formNameField;
        
        private bool mdiField;
        
        private string roleNameField;
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public long IDD {
            get {
                return this.iDDField;
            }
            set {
                this.iDDField = value;
            }
        }
        
        /// <remarks/>
        public string StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public long StatusNo {
            get {
                return this.statusNoField;
            }
            set {
                this.statusNoField = value;
            }
        }
        
        /// <remarks/>
        public StatusFind StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ConntionName {
            get {
                return this.conntionNameField;
            }
            set {
                this.conntionNameField = value;
            }
        }
        
        /// <remarks/>
        public long Portal {
            get {
                return this.portalField;
            }
            set {
                this.portalField = value;
            }
        }
        
        /// <remarks/>
        public string PortRead {
            get {
                return this.portReadField;
            }
            set {
                this.portReadField = value;
            }
        }
        
        /// <remarks/>
        public string PortWrite {
            get {
                return this.portWriteField;
            }
            set {
                this.portWriteField = value;
            }
        }
        
        /// <remarks/>
        public string IpAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        public string MAC {
            get {
                return this.mACField;
            }
            set {
                this.mACField = value;
            }
        }
        
        /// <remarks/>
        public string Maline {
            get {
                return this.malineField;
            }
            set {
                this.malineField = value;
            }
        }
        
        /// <remarks/>
        public string Maphieu {
            get {
                return this.maphieuField;
            }
            set {
                this.maphieuField = value;
            }
        }
        
        /// <remarks/>
        public string LogUserID {
            get {
                return this.logUserIDField;
            }
            set {
                this.logUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string LogPass {
            get {
                return this.logPassField;
            }
            set {
                this.logPassField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorDesc {
            get {
                return this.errorDescField;
            }
            set {
                this.errorDescField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ResponseTime {
            get {
                return this.responseTimeField;
            }
            set {
                this.responseTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseTimes {
            get {
                return this.responseTimesField;
            }
            set {
                this.responseTimesField = value;
            }
        }
        
        /// <remarks/>
        public string ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreate {
            get {
                return this.dateCreateField;
            }
            set {
                this.dateCreateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateModify {
            get {
                return this.dateModifyField;
            }
            set {
                this.dateModifyField = value;
            }
        }
        
        /// <remarks/>
        public long TimeOut {
            get {
                return this.timeOutField;
            }
            set {
                this.timeOutField = value;
            }
        }
        
        /// <remarks/>
        public long IsUsed {
            get {
                return this.isUsedField;
            }
            set {
                this.isUsedField = value;
            }
        }
        
        /// <remarks/>
        public int IsChecked {
            get {
                return this.isCheckedField;
            }
            set {
                this.isCheckedField = value;
            }
        }
        
        /// <remarks/>
        public int Disabled {
            get {
                return this.disabledField;
            }
            set {
                this.disabledField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string ReasonId {
            get {
                return this.reasonIdField;
            }
            set {
                this.reasonIdField = value;
            }
        }
        
        /// <remarks/>
        public string Ghichu {
            get {
                return this.ghichuField;
            }
            set {
                this.ghichuField = value;
            }
        }
        
        /// <remarks/>
        public string Return {
            get {
                return this.returnField;
            }
            set {
                this.returnField = value;
            }
        }
        
        /// <remarks/>
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public string Permission {
            get {
                return this.permissionField;
            }
            set {
                this.permissionField = value;
            }
        }
        
        /// <remarks/>
        public int Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        public string KeyID2 {
            get {
                return this.keyID2Field;
            }
            set {
                this.keyID2Field = value;
            }
        }
        
        /// <remarks/>
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string KeyParent {
            get {
                return this.keyParentField;
            }
            set {
                this.keyParentField = value;
            }
        }
        
        /// <remarks/>
        public string TextName {
            get {
                return this.textNameField;
            }
            set {
                this.textNameField = value;
            }
        }
        
        /// <remarks/>
        public string Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        public string ToolTip {
            get {
                return this.toolTipField;
            }
            set {
                this.toolTipField = value;
            }
        }
        
        /// <remarks/>
        public int Childs {
            get {
                return this.childsField;
            }
            set {
                this.childsField = value;
            }
        }
        
        /// <remarks/>
        public string Prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string CodeHash {
            get {
                return this.codeHashField;
            }
            set {
                this.codeHashField = value;
            }
        }
        
        /// <remarks/>
        public string EditMode {
            get {
                return this.editModeField;
            }
            set {
                this.editModeField = value;
            }
        }
        
        /// <remarks/>
        public string AddMode {
            get {
                return this.addModeField;
            }
            set {
                this.addModeField = value;
            }
        }
        
        /// <remarks/>
        public object Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public object FormSender {
            get {
                return this.formSenderField;
            }
            set {
                this.formSenderField = value;
            }
        }
        
        /// <remarks/>
        public string Payment {
            get {
                return this.paymentField;
            }
            set {
                this.paymentField = value;
            }
        }
        
        /// <remarks/>
        public string NoMonth {
            get {
                return this.noMonthField;
            }
            set {
                this.noMonthField = value;
            }
        }
        
        /// <remarks/>
        public int AppID {
            get {
                return this.appIDField;
            }
            set {
                this.appIDField = value;
            }
        }
        
        /// <remarks/>
        public string AppName {
            get {
                return this.appNameField;
            }
            set {
                this.appNameField = value;
            }
        }
        
        /// <remarks/>
        public string AppMethod {
            get {
                return this.appMethodField;
            }
            set {
                this.appMethodField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string IPClient {
            get {
                return this.iPClientField;
            }
            set {
                this.iPClientField = value;
            }
        }
        
        /// <remarks/>
        public int Min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
            }
        }
        
        /// <remarks/>
        public int Max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
            }
        }
        
        /// <remarks/>
        public long Soluong {
            get {
                return this.soluongField;
            }
            set {
                this.soluongField = value;
            }
        }
        
        /// <remarks/>
        public long Tongso {
            get {
                return this.tongsoField;
            }
            set {
                this.tongsoField = value;
            }
        }
        
        /// <remarks/>
        public string Loai {
            get {
                return this.loaiField;
            }
            set {
                this.loaiField = value;
            }
        }
        
        /// <remarks/>
        public SyncStatus Sync {
            get {
                return this.syncField;
            }
            set {
                this.syncField = value;
            }
        }
        
        /// <remarks/>
        public Status Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string SerialNo {
            get {
                return this.serialNoField;
            }
            set {
                this.serialNoField = value;
            }
        }
        
        /// <remarks/>
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        public string XmlString {
            get {
                return this.xmlStringField;
            }
            set {
                this.xmlStringField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int SyncStatus {
            get {
                return this.syncStatusField;
            }
            set {
                this.syncStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public string Longitudes {
            get {
                return this.longitudesField;
            }
            set {
                this.longitudesField = value;
            }
        }
        
        /// <remarks/>
        public string Latitudes {
            get {
                return this.latitudesField;
            }
            set {
                this.latitudesField = value;
            }
        }
        
        /// <remarks/>
        public string DateChange {
            get {
                return this.dateChangeField;
            }
            set {
                this.dateChangeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastLoginDate {
            get {
                return this.lastLoginDateField;
            }
            set {
                this.lastLoginDateField = value;
            }
        }
        
        /// <remarks/>
        public string UpTime {
            get {
                return this.upTimeField;
            }
            set {
                this.upTimeField = value;
            }
        }
        
        /// <remarks/>
        public long Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public string FormName {
            get {
                return this.formNameField;
            }
            set {
                this.formNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Mdi {
            get {
                return this.mdiField;
            }
            set {
                this.mdiField = value;
            }
        }
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SyncStatus {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Update,
        
        /// <remarks/>
        Sync,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseEventD))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResponseEvent : clsIDD {
        
        private long codeResultField;
        
        private string ipClientField;
        
        private string dataField;
        
        private string sessionIDField;
        
        /// <remarks/>
        public long CodeResult {
            get {
                return this.codeResultField;
            }
            set {
                this.codeResultField = value;
            }
        }
        
        /// <remarks/>
        public string ipClient {
            get {
                return this.ipClientField;
            }
            set {
                this.ipClientField = value;
            }
        }
        
        /// <remarks/>
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public string SessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResponseEventD : ResponseEvent {
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        public System.Data.DataSet dataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsTicket))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Account))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsDiaphuong))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsAddress))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsDonvi))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ErrorEvent : clsIDD {
        
        private long codeResultField;
        
        private string codeStrField;
        
        /// <remarks/>
        public long CodeResult {
            get {
                return this.codeResultField;
            }
            set {
                this.codeResultField = value;
            }
        }
        
        /// <remarks/>
        public string CodeStr {
            get {
                return this.codeStrField;
            }
            set {
                this.codeStrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Account))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsDiaphuong))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsAddress))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsDonvi))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsTicket : ErrorEvent {
        
        private System.DateTime expirationField;
        
        private bool expiredField;
        
        private bool isPersistentField;
        
        private System.DateTime issueDateField;
        
        private string userDataField;
        
        private string cookiePathField;
        
        private int versionIDField;
        
        /// <remarks/>
        public System.DateTime Expiration {
            get {
                return this.expirationField;
            }
            set {
                this.expirationField = value;
            }
        }
        
        /// <remarks/>
        public bool Expired {
            get {
                return this.expiredField;
            }
            set {
                this.expiredField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPersistent {
            get {
                return this.isPersistentField;
            }
            set {
                this.isPersistentField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime IssueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
        /// <remarks/>
        public string UserData {
            get {
                return this.userDataField;
            }
            set {
                this.userDataField = value;
            }
        }
        
        /// <remarks/>
        public string CookiePath {
            get {
                return this.cookiePathField;
            }
            set {
                this.cookiePathField = value;
            }
        }
        
        /// <remarks/>
        public int VersionID {
            get {
                return this.versionIDField;
            }
            set {
                this.versionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsDiaphuong))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsAddress))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsDonvi))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Account : clsTicket {
        
        private clsTicket ticketField;
        
        private string userQlNoField;
        
        private string userNEOField;
        
        private long nhanvienIDField;
        
        private string nguoidungIDField;
        
        private string loainvIDField;
        
        private string nhanvienKVField;
        
        private long donviIDField;
        
        private string donviql_IDField;
        
        private string donvidl_IDField;
        
        private string ma_nvField;
        
        private string mobileField;
        
        private string mobileAliasField;
        
        private string mobilePINField;
        
        private string mobileEMEIField;
        
        private string phoneField;
        
        private string emailField;
        
        private string emailPasswordField;
        
        private int isApprovedField;
        
        private int isLockedOutField;
        
        private string ten_dvField;
        
        private int sttField;
        
        /// <remarks/>
        public clsTicket Ticket {
            get {
                return this.ticketField;
            }
            set {
                this.ticketField = value;
            }
        }
        
        /// <remarks/>
        public string UserQlNo {
            get {
                return this.userQlNoField;
            }
            set {
                this.userQlNoField = value;
            }
        }
        
        /// <remarks/>
        public string UserNEO {
            get {
                return this.userNEOField;
            }
            set {
                this.userNEOField = value;
            }
        }
        
        /// <remarks/>
        public long NhanvienID {
            get {
                return this.nhanvienIDField;
            }
            set {
                this.nhanvienIDField = value;
            }
        }
        
        /// <remarks/>
        public string NguoidungID {
            get {
                return this.nguoidungIDField;
            }
            set {
                this.nguoidungIDField = value;
            }
        }
        
        /// <remarks/>
        public string LoainvID {
            get {
                return this.loainvIDField;
            }
            set {
                this.loainvIDField = value;
            }
        }
        
        /// <remarks/>
        public string NhanvienKV {
            get {
                return this.nhanvienKVField;
            }
            set {
                this.nhanvienKVField = value;
            }
        }
        
        /// <remarks/>
        public long DonviID {
            get {
                return this.donviIDField;
            }
            set {
                this.donviIDField = value;
            }
        }
        
        /// <remarks/>
        public string Donviql_ID {
            get {
                return this.donviql_IDField;
            }
            set {
                this.donviql_IDField = value;
            }
        }
        
        /// <remarks/>
        public string Donvidl_ID {
            get {
                return this.donvidl_IDField;
            }
            set {
                this.donvidl_IDField = value;
            }
        }
        
        /// <remarks/>
        public string Ma_nv {
            get {
                return this.ma_nvField;
            }
            set {
                this.ma_nvField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string MobileAlias {
            get {
                return this.mobileAliasField;
            }
            set {
                this.mobileAliasField = value;
            }
        }
        
        /// <remarks/>
        public string MobilePIN {
            get {
                return this.mobilePINField;
            }
            set {
                this.mobilePINField = value;
            }
        }
        
        /// <remarks/>
        public string MobileEMEI {
            get {
                return this.mobileEMEIField;
            }
            set {
                this.mobileEMEIField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string EmailPassword {
            get {
                return this.emailPasswordField;
            }
            set {
                this.emailPasswordField = value;
            }
        }
        
        /// <remarks/>
        public int IsApproved {
            get {
                return this.isApprovedField;
            }
            set {
                this.isApprovedField = value;
            }
        }
        
        /// <remarks/>
        public int IsLockedOut {
            get {
                return this.isLockedOutField;
            }
            set {
                this.isLockedOutField = value;
            }
        }
        
        /// <remarks/>
        public string Ten_dv {
            get {
                return this.ten_dvField;
            }
            set {
                this.ten_dvField = value;
            }
        }
        
        /// <remarks/>
        public int Stt {
            get {
                return this.sttField;
            }
            set {
                this.sttField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsAddress))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsDonvi))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsDiaphuong : Account {
        
        private string maTinhField;
        
        private string maHuyenField;
        
        private string maXaField;
        
        private string maDuongField;
        
        private string makpField;
        
        private string tenTinhField;
        
        private string tenHuyenField;
        
        private string tenXaField;
        
        private string tenDuongField;
        
        private string khuphoField;
        
        private long loaiphoField;
        
        private string ngo_HemField;
        
        private string sonhaField;
        
        private long dacdiem_IDField;
        
        private string dacdiemField;
        
        private string diachiField;
        
        private long ngo_IDField;
        
        private long pho_IDField;
        
        private long phuong_IDField;
        
        private long quan_IDField;
        
        private long tinh_IDField;
        
        /// <remarks/>
        public string MaTinh {
            get {
                return this.maTinhField;
            }
            set {
                this.maTinhField = value;
            }
        }
        
        /// <remarks/>
        public string MaHuyen {
            get {
                return this.maHuyenField;
            }
            set {
                this.maHuyenField = value;
            }
        }
        
        /// <remarks/>
        public string MaXa {
            get {
                return this.maXaField;
            }
            set {
                this.maXaField = value;
            }
        }
        
        /// <remarks/>
        public string MaDuong {
            get {
                return this.maDuongField;
            }
            set {
                this.maDuongField = value;
            }
        }
        
        /// <remarks/>
        public string Makp {
            get {
                return this.makpField;
            }
            set {
                this.makpField = value;
            }
        }
        
        /// <remarks/>
        public string TenTinh {
            get {
                return this.tenTinhField;
            }
            set {
                this.tenTinhField = value;
            }
        }
        
        /// <remarks/>
        public string TenHuyen {
            get {
                return this.tenHuyenField;
            }
            set {
                this.tenHuyenField = value;
            }
        }
        
        /// <remarks/>
        public string TenXa {
            get {
                return this.tenXaField;
            }
            set {
                this.tenXaField = value;
            }
        }
        
        /// <remarks/>
        public string TenDuong {
            get {
                return this.tenDuongField;
            }
            set {
                this.tenDuongField = value;
            }
        }
        
        /// <remarks/>
        public string Khupho {
            get {
                return this.khuphoField;
            }
            set {
                this.khuphoField = value;
            }
        }
        
        /// <remarks/>
        public long Loaipho {
            get {
                return this.loaiphoField;
            }
            set {
                this.loaiphoField = value;
            }
        }
        
        /// <remarks/>
        public string Ngo_Hem {
            get {
                return this.ngo_HemField;
            }
            set {
                this.ngo_HemField = value;
            }
        }
        
        /// <remarks/>
        public string Sonha {
            get {
                return this.sonhaField;
            }
            set {
                this.sonhaField = value;
            }
        }
        
        /// <remarks/>
        public long Dacdiem_ID {
            get {
                return this.dacdiem_IDField;
            }
            set {
                this.dacdiem_IDField = value;
            }
        }
        
        /// <remarks/>
        public string Dacdiem {
            get {
                return this.dacdiemField;
            }
            set {
                this.dacdiemField = value;
            }
        }
        
        /// <remarks/>
        public string Diachi {
            get {
                return this.diachiField;
            }
            set {
                this.diachiField = value;
            }
        }
        
        /// <remarks/>
        public long Ngo_ID {
            get {
                return this.ngo_IDField;
            }
            set {
                this.ngo_IDField = value;
            }
        }
        
        /// <remarks/>
        public long Pho_ID {
            get {
                return this.pho_IDField;
            }
            set {
                this.pho_IDField = value;
            }
        }
        
        /// <remarks/>
        public long Phuong_ID {
            get {
                return this.phuong_IDField;
            }
            set {
                this.phuong_IDField = value;
            }
        }
        
        /// <remarks/>
        public long Quan_ID {
            get {
                return this.quan_IDField;
            }
            set {
                this.quan_IDField = value;
            }
        }
        
        /// <remarks/>
        public long Tinh_ID {
            get {
                return this.tinh_IDField;
            }
            set {
                this.tinh_IDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clsDonvi))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsAddress : clsDiaphuong {
        
        private string diachiKHField;
        
        private string diachittField;
        
        private string diachigbField;
        
        private string diachiTBField;
        
        private string diachildField;
        
        private string soField;
        
        private string ngaycapField;
        
        private string noicapField;
        
        private string hokhauField;
        
        /// <remarks/>
        public string DiachiKH {
            get {
                return this.diachiKHField;
            }
            set {
                this.diachiKHField = value;
            }
        }
        
        /// <remarks/>
        public string Diachitt {
            get {
                return this.diachittField;
            }
            set {
                this.diachittField = value;
            }
        }
        
        /// <remarks/>
        public string Diachigb {
            get {
                return this.diachigbField;
            }
            set {
                this.diachigbField = value;
            }
        }
        
        /// <remarks/>
        public string DiachiTB {
            get {
                return this.diachiTBField;
            }
            set {
                this.diachiTBField = value;
            }
        }
        
        /// <remarks/>
        public string Diachild {
            get {
                return this.diachildField;
            }
            set {
                this.diachildField = value;
            }
        }
        
        /// <remarks/>
        public string So {
            get {
                return this.soField;
            }
            set {
                this.soField = value;
            }
        }
        
        /// <remarks/>
        public string Ngaycap {
            get {
                return this.ngaycapField;
            }
            set {
                this.ngaycapField = value;
            }
        }
        
        /// <remarks/>
        public string Noicap {
            get {
                return this.noicapField;
            }
            set {
                this.noicapField = value;
            }
        }
        
        /// <remarks/>
        public string Hokhau {
            get {
                return this.hokhauField;
            }
            set {
                this.hokhauField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsDonvi : clsAddress {
        
        private string madviField;
        
        private string mattField;
        
        private string madaiField;
        
        private string matramField;
        
        private string maToqlField;
        
        private string matramTCField;
        
        private string tenDviField;
        
        private string tenTrungtamField;
        
        private string tenDaiField;
        
        private string tenTramField;
        
        private string tenToqlField;
        
        private string mabcucField;
        
        private string tenbcucField;
        
        private string khoIDField;
        
        private string tenKhoField;
        
        private string loaidviField;
        
        /// <remarks/>
        public string Madvi {
            get {
                return this.madviField;
            }
            set {
                this.madviField = value;
            }
        }
        
        /// <remarks/>
        public string Matt {
            get {
                return this.mattField;
            }
            set {
                this.mattField = value;
            }
        }
        
        /// <remarks/>
        public string Madai {
            get {
                return this.madaiField;
            }
            set {
                this.madaiField = value;
            }
        }
        
        /// <remarks/>
        public string Matram {
            get {
                return this.matramField;
            }
            set {
                this.matramField = value;
            }
        }
        
        /// <remarks/>
        public string MaToql {
            get {
                return this.maToqlField;
            }
            set {
                this.maToqlField = value;
            }
        }
        
        /// <remarks/>
        public string MatramTC {
            get {
                return this.matramTCField;
            }
            set {
                this.matramTCField = value;
            }
        }
        
        /// <remarks/>
        public string TenDvi {
            get {
                return this.tenDviField;
            }
            set {
                this.tenDviField = value;
            }
        }
        
        /// <remarks/>
        public string TenTrungtam {
            get {
                return this.tenTrungtamField;
            }
            set {
                this.tenTrungtamField = value;
            }
        }
        
        /// <remarks/>
        public string TenDai {
            get {
                return this.tenDaiField;
            }
            set {
                this.tenDaiField = value;
            }
        }
        
        /// <remarks/>
        public string TenTram {
            get {
                return this.tenTramField;
            }
            set {
                this.tenTramField = value;
            }
        }
        
        /// <remarks/>
        public string TenToql {
            get {
                return this.tenToqlField;
            }
            set {
                this.tenToqlField = value;
            }
        }
        
        /// <remarks/>
        public string Mabcuc {
            get {
                return this.mabcucField;
            }
            set {
                this.mabcucField = value;
            }
        }
        
        /// <remarks/>
        public string Tenbcuc {
            get {
                return this.tenbcucField;
            }
            set {
                this.tenbcucField = value;
            }
        }
        
        /// <remarks/>
        public string KhoID {
            get {
                return this.khoIDField;
            }
            set {
                this.khoIDField = value;
            }
        }
        
        /// <remarks/>
        public string TenKho {
            get {
                return this.tenKhoField;
            }
            set {
                this.tenKhoField = value;
            }
        }
        
        /// <remarks/>
        public string Loaidvi {
            get {
                return this.loaidviField;
            }
            set {
                this.loaidviField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SecurityType {
        
        /// <remarks/>
        SHA1,
        
        /// <remarks/>
        SHA256,
        
        /// <remarks/>
        MD5,
        
        /// <remarks/>
        SHA1MD5,
        
        /// <remarks/>
        MD5SHA1,
        
        /// <remarks/>
        TripleDes,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void HashEncryptCompletedEventHandler(object sender, HashEncryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HashEncryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HashEncryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Test1CompletedEventHandler(object sender, Test1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Test1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Test1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Tes22CompletedEventHandler(object sender, Tes22CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Tes22CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Tes22CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Tes3CompletedEventHandler(object sender, Tes3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Tes3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Tes3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEventD Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEventD)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SigoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoginOTPCompletedEventHandler(object sender, LoginOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SMSSendOTP1CompletedEventHandler(object sender, SMSSendOTP1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMSSendOTP1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMSSendOTP1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SMSSendOTP2CompletedEventHandler(object sender, SMSSendOTP2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMSSendOTP2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMSSendOTP2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void isRolesCompletedEventHandler(object sender, isRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRolesCompletedEventHandler(object sender, GetRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEventD Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEventD)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRoleInUserCompletedEventHandler(object sender, GetRoleInUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleInUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleInUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEventD Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEventD)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRolesXMLCompletedEventHandler(object sender, GetRolesXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RoleType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RoleType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserListCompletedEventHandler(object sender, UserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUserListCompletedEventHandler(object sender, GetUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEventD Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEventD)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddUserToRoleCompletedEventHandler(object sender, AddUserToRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserToRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserToRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEventD Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEventD)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RegisterUserCompletedEventHandler(object sender, RegisterUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckUserNameByPhoneCompletedEventHandler(object sender, CheckUserNameByPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserNameByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserNameByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RandomPasswordCompletedEventHandler(object sender, RandomPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RandomPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RandomPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListEmployeeCompletedEventHandler(object sender, ListEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEventD Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEventD)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListEmployeeRegEmailCompletedEventHandler(object sender, ListEmployeeRegEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListEmployeeRegEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListEmployeeRegEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEventD Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEventD)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListEmployeesCompletedEventHandler(object sender, ListEmployeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void EmployeeUpdateCompletedEventHandler(object sender, EmployeeUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEventD Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEventD)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void EmployeeUpdatesCompletedEventHandler(object sender, EmployeeUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEventD Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEventD)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void EmployeeUpdateEmailCompletedEventHandler(object sender, EmployeeUpdateEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeUpdateEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeUpdateEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void EmployeeSyncCompletedEventHandler(object sender, EmployeeSyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeSyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeSyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEventD Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEventD)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DonviListGetCompletedEventHandler(object sender, DonviListGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DonviListGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DonviListGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsDonvi[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsDonvi[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591